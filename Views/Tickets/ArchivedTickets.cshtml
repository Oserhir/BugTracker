@model IEnumerable<TheBugTracker.Models.Ticket>
@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Services.Interfaces
@using TheBugTracker.Models.Enums

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService

@{
    ViewData["Title"] = "Archived Tickets";
    BTUser btUser = await UserManager.GetUserAsync(User);
}


<div class="d-flex align-items-center">
    <a class="" asp-action="AllTickets" asp-controller="Tickets" style="color: rgb(23, 123, 227); margin-right : 15px" >  <i class="fa fa-arrow-left fa-lg" aria-hidden="true"></i> </a>
    <h4 class="mb-0">Archived Tickets</h4>
</div>

<div class="d-flex align-items-center" style="margin-bottom : 20px">
    <a class="" asp-action="Dashboard" asp-controller="Home" style="color: rgb(23, 123, 227); margin-right : 15px" >  <i class="fa fa-home fa-lg" aria-hidden="true"></i> </a>
    <p class="mb-0" style="margin-right : 5px">/ Tickets</p>
    <p class="mb-0">/ ArchivedTickets</p>
</div>



							<!-- Column starts -->
								<div class="col-xl-12">
									<div class="card dz-card" id="accordion-one">
										<div class="card-header flex-wrap">
											<div>
                                                <h4 class="card-title">Archived Tickets</h4>
												 
											</div>
											 
										</div>
										<!--tab-content-->
										<div class="tab-content" id="myTabContent">
											<div class="tab-pane fade show active" id="Preview" role="tabpanel" aria-labelledby="home-tab">
											 <div class="card-body pt-0">
												<div class="table-responsive">
													<table id="example" class="display table" style="min-width: 845px">
														<thead>
															<tr>
                                                                <th>  @Html.DisplayNameFor(model => model.Title) </th>
                                                                <th>  @Html.DisplayNameFor(model => model.TicketType) </th>
                                                                <th> @Html.DisplayNameFor(model => model.TicketPriority) </th>
                                                                <th> @Html.DisplayNameFor(model => model.TicketStatus) </th>
                                                                <th> @Html.DisplayNameFor(model => model.OwnerUser) </th>
                                                                <th>  @Html.DisplayNameFor(model => model.DeveloperUser) </th>
                                                                <th>  Action </th>
															</tr>
														</thead>
														<tbody>
                                                         @foreach (var item in Model)
                                                          {

                                    var status = "";

                                    if (item.TicketStatus.Name == "New")
                                    {
                                        status = "badge-success";
                                    }
                                    else if (item.TicketStatus.Name == "Development")
                                    {
                                        status = "badge-primary";
                                    }
                                    else if (item.TicketStatus.Name == "Testing")
                                    {
                                        status = "badge-warning";
                                    }
                                    else
                                    {
                                        status = "badge-danger";
                                    }

                                    var priority = "";

                                    if (item.TicketPriority.Name == "High")
                                    {
                                        priority = "badge-warning";
                                    }
                                    else if (item.TicketPriority.Name == "Low")
                                    {
                                        priority = "badge-success";
                                    }
                                    else if (item.TicketPriority.Name == "Medium")
                                    {
                                        priority = "bg-dark";
                                    }
                                    else if (item.TicketPriority.Name == "Urgent")
                                    {
                                        priority = "badge-danger";
                                    }
                                    else
                                    {
                                        priority = "badge-danger";
                                    }

                                    var type = "";

                                    if (item.TicketType.Name == "ChangeRequest")
                                    {
                                        type = "badge-warning";
                                    }
                                    else if (item.TicketType.Name == "GeneralTask")
                                    {
                                        type = "badge-success";
                                    }
                                    else if (item.TicketType.Name == "Enhancement")
                                    {
                                        type = "badge-primary";
                                    }
                                    else if (item.TicketType.Name == "NewDevelopment")
                                    {
                                        type = "badge-danger";
                                    }
                                    else
                                    {
                                        type = "badge-dark";
                                    }

															
                                                                   <tr>
                                                        <!-- LOOP -->


                                                                <td>
                                                                    <div class="products">
                                                                        <div> <h6> @Html.DisplayFor(modelItem => item.Title) </h6>  </div>	
                                                                    </div>
                                                                </td>             
                                                        

                                                                <td> 
                                                                        <span class="badge @type light border-0 me-1"> @Html.DisplayFor(modelItem => item.TicketType.Name ) 

                                                                    </span>
                                                                </td>

                                                            <td>
                                                                  <span class="badge @priority light border-0 me-1"> @Html.DisplayFor(modelItem => item.TicketPriority.Name) </span>
                                                            </td>

                                                           <td><span class="badge @status light border-0 me-1"> @Html.DisplayFor(modelItem => item.TicketStatus.Name) </span>
                                                        </td>

                                                       <td>
                                                           <span> @Html.DisplayFor(modelItem => item.OwnerUser.FullName)  </span></td>

                                                          <td><span> @Html.DisplayFor(modelItem => item.DeveloperUser.FullName) </span></td>


                                                        <td>

                                                            <div class="d-flex">


                                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-success shadow btn-xs sharp me-1"><i class="fa fa-eye"></i></a>

                                                    @if (User.IsInRole(nameof(Roles.Admin)) || await ProjectService.IsAssignedProjectManagerAsync(btUser.Id, item.ProjectId))
                                                    {

                                                        if (item.Archived)
                                                        {
                                                           <a asp-action="Restore" asp-route-id="@item.Id" class="btn btn-info shadow btn-xs sharp"><i class="fa fa-refresh"></i></a>

                                                        }
                                                        else
                                                        {
                                                            <a asp-action="Archive" asp-route-id="@item.Id" class="btn btn-danger shadow btn-xs sharp"><i class="fa fa-archive"></i></a>
                                                        }
                                                    }



                                                           </div>

                                                     </td>

                                                    </tr>

                                                          }
														 
														</tbody>
														 
													</table>
												</div>
											</div>
												<!-- /Default accordion -->	
											</div>
											<div class="tab-pane fade " id="html" role="tabpanel" aria-labelledby="home-tab">
												<div class="card-body pt-0 p-0 code-area">
<!-- Default accordion -->
<pre class="mb-0"><code class="language-html">


     