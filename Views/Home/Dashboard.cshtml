@model TheBugTracker.Models.ViewModels.DashboardViewModel
@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Services.Interfaces
@using TheBugTracker.Models.Enums

@inject UserManager<BTUser> UserManager
@inject IBTRolesService RolesService

@{
    ViewData["Title"] = "Dashboard";
    @* Instantiate the btUser *@
    BTUser btUser = await UserManager.GetUserAsync(User);
}

@* Projects Table *@
@{
    string projectPriorityFormat = "bg-dark";
}

@* Tickets Table *@
@{
    string ticketPriorityFormat = "bg-dark";
}


<div class="d-flex align-items-center">
    <a class="" asp-action="AllTickets" asp-controller="Tickets" 
    style="color: rgb(23, 123, 227); margin-right : 15px" >  <i class="fa fa-arrow-left fa-lg" aria-hidden="true"></i> </a>
    <h4 class="mb-0">Dashboard</h4>
</div>

<div class="d-flex align-items-center" style="margin-bottom : 20px">
    <a class="" asp-action="Dashboard" asp-controller="Home" style="color: rgb(23, 123, 227); margin-right : 15px" >  <i class="fa fa-home fa-lg" aria-hidden="true"></i> </a>

</div>


<!-- !Info pills -->

<div class="row mt-4">
    
    <div class="">
        
        <div class="row">

            <div class="col-xl-3  col-lg-6 col-sm-6">
                        <div class="widget-stat card">
                            <div class="card-body p-4">
                                <h4 class="card-title">Active Projects</h4>
                                <h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
                                <!-- 
                                <div class="progress mb-2">
                                    <div class="progress-bar progress-animated bg-primary" style="width: 80%"></div>
                                </div>
                               --> 
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-3  col-lg-6 col-sm-6">
                        <div class="widget-stat card">
                            <div class="card-body p-4">
                                <h4 class="card-title">Total Tickets</h4>
                                <h3>@Model.Tickets.Count()</h3>
                                <!-- 
                                <div class="progress mb-2">
                                    <div class="progress-bar progress-animated bg-warning" style="width: 50%"></div>
                                </div>
                                -->
                               
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-3  col-lg-6 col-sm-6">
                        <div class="widget-stat card">
                            <div class="card-body p-4">
                                <h4 class="card-title">Unassigned Tickets</h4>
                                <h3>@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
                             
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-3  col-lg-6 col-sm-6">
                        <div class="widget-stat card">
                            <div class="card-body p-4">
                                <h4 class="card-title">Total Data</h4>
                                <h3> @(Model.Projects.Count() + Model.Tickets.Count() + Model.Members.Count()) </h3>
                                
                            </div>
                        </div>
                    </div>
         

                      </div>
                        </div>
                    </div>


<!-- Styles -->
@*<style>
    .amDark {
        background-color: #30303d;
        color: #fff;
    }

    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>*@

<!-- 
<h3 class="mt-2 mb-2">Dashboard</h3>

<a href="">
    @if (btUser?.AvatarFileData != null)
    {
        <img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(btUser.AvatarFileData))" alt="" />
    }
    else
    {
        <img class="media-object" style="width:60px;height:60px;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" />
    }
</a>


@* Get The btUser FullName *@
<strong>@btUser.FullName</strong>
<span class="text-muted" style="font-size:x-small;">
    @* Company Name *@
    <strong>@Model.Company.Name</strong>
</span>

-->

<div class="row">
     <!-- Chart 1 Tickets by Priority  -->
 <div class="col-xl-6 col-lg-6">
          <div class="card">
               <div class="card-header">
                       <h4 class="card-title">Tickets by Priority</h4>
               </div>
              
               <div class="card-body">
                      <div id="morrisTicketPriority" class="morris_chart_height"></div>
                       </div>
               </div>
 </div>
  <!-- Chart 1 Tickets by Status  -->
    <div class="col-xl-6 col-lg-6">
                                <div class="card">
                                    <div class="card-header">
                                        <h4 class="card-title">Tickets by Status</h4>
                                    </div>
                                    <div class="card-body">
                                        <div id="morrisTicketStatus" class="morris_chart_height"></div>
                                    </div>
                                </div>
    </div>

</div>


<!-- Charts 01 -->

<div class="row">

     <!-- Start : Active projects chart-->
    <div class="col-xl-6 col-lg-6">
        <div class="card shadow">
            <div class="card-header">
                <strong>Active Projects: Tickets vs Developers</strong>
            </div>
            <div class="card-body">
                <div id="plotlyChart"></div>
            </div>
        </div>
    </div>
     <!-- END : Active projects chart-->


         <!-- Column starts -->
                    <div class="col-xl-6 col-lg-6">
                        <div class="card dz-card"  id="bootstrap-table11">
                            <div class="card-header flex-wrap d-flex justify-content-between ">
                                <div>
                                    <h4 class="card-title">Projects</h4>
                                   
                                </div>
                               	
                            </div>
                            <div class="tab-content" id="myTabContent-8">
                                <div class="tab-pane fade show active" id="activebackground" role="tabpanel" aria-labelledby="home-tab-8">	
                                    <div class="card-body pt-0">
                                        <div class="table-responsive">
                                            <table class="table header-border table-responsive-sm">
                                                <thead>
                                                    <tr>
                                                        <th>Name</th>
                                                        <th>StartDate</th>
                                                        <th>EndDate</th>
                                                        <th>Priority</th>
                                                        <th>Action</th>
                                                       
                                                    </tr>
                                                </thead>
                                                <tbody>

                                         @foreach (var project in Model.Projects.OrderByDescending(p => p.EndDate))
                                         {
                                                if (project.ProjectPriority?.Name == "Low")
                                                {
                                            projectPriorityFormat = "bg-success";
                                                }
                                                else if (project.ProjectPriority?.Name == "Medium")
                                                {
                                                 projectPriorityFormat = "bg-warning";
                                                }
                                                else if (project.ProjectPriority?.Name == "High")
                                                {
                                            projectPriorityFormat = "badge-info light";
                                                }
                                                else if (project.ProjectPriority?.Name == "Urgent")
                                                {
                                            projectPriorityFormat = "badge-danger";
                                                }

                                                    <tr>
                                                        <td> <a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style="text-decoration: none">@project.Name</a> </td>
                                                            <td><span style="font-size:small">@project.StartDate.ToString("dd-MMM-yyyy")</span></td>
                                                            <td><span class="text-muted"><span style="font-size:small">@project.EndDate.ToString("dd-MMM-yyyy")</span></span>
                                                        </td>
                                                            <td><span class="badge @projectPriorityFormat">@project.ProjectPriority?.Name</span></td>
                                                            <td><span class="">
                                                                        <a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" class="btn btn-success shadow btn-xs sharp me-1"><i class="fa fa-eye"></i></a>
                                                               
                                                        </td>
                                                        
                                                    </tr>
                                               }     
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="activebackground-html" role="tabpanel" aria-labelledby="home-tab-8">	
                                    <div class="card-body pt-0 p-0 code-area">
	
                                    </div>
                                </div>
                            </div>		
                        </div>
                    </div>
                    <!-- Column ends -->
 
   </div>



<!-- Charts 02 -->



<div id="">
                    <!--Tickets -->
                    <div class="col-xl-12">
                        <div class="card">
                            <div class="card-body p-0">
                                <div class="table-responsive active-projects task-table">
                                    <div class="tbl-caption">
                                        <h4 class="heading mb-0">Tickets</h4>
                                    </div>

                                    <table id="empoloyeestbl2" class="table">
                                        <thead>
                                            <tr>
                                               
                                                <th>#</th>
                                                <th>Title</th>
                                                <th>Developer</th>
                                                <th>Status</th>
                                                <th>Priority</th>
                                                <th>Date</th>
                                                <th class="text-end" >Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>


                            @foreach ( var ticket in Model.Tickets.OrderByDescending(d => d.Created) )
                            {

                                if (ticket.TicketPriority?.Name == "Low")
                                    {
                                        ticketPriorityFormat = "bg-secondary";
                                    }
                                    else if (ticket.TicketPriority?.Name == "Medium")
                                    {
                                        ticketPriorityFormat = "bg-info";
                                    }
                                    else if (ticket.TicketPriority?.Name == "High")
                                    {
                                        ticketPriorityFormat = "bg-warning";
                                    }
                                    else if (ticket.TicketPriority?.Name == "Urgent")
                                    {
                                        ticketPriorityFormat = "bg-danger";
                                    }

                                  <tr>

                        <td> </td>
                        <td> <a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="text-decoration: none">@ticket.Title</a>  </td>
                        <td>
                               @if (ticket.DeveloperUserId != null)
                               {
                                   @ticket.DeveloperUser?.FullName
                               }
                               else
                               {
                                   <span class="badge bg-warning text-dark">Unassigned </span>
                               }
                        </td>

                        @if (ticket.TicketStatus.Name == "New")
                        {
                            <td><span class="badge bg-success rounded-pill">@ticket.TicketStatus.Name </span></td>
                        }
                        else
                        {
                            <td><span class="badge bg-secondary rounded-pill">@ticket.TicketStatus.Name </span></td>
                        }

                        <td>
                             <span class="badge @ticketPriorityFormat">@ticket.TicketPriority.Name </span>
                        </td>


                       <td> @ticket.Created.ToString("dd-MMM-yyyy") </td>

                        <td>
                                       <a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" class="btn btn-success shadow btn-xs sharp me-1"><i class="fa fa-eye"></i></a>

                        </td>

                           </tr>

                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
 </div>






@section scripts{

<script src="~/js/chart-bar-demo.js"></script>

	@* Morris Donut Chart *@
    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>

	@*Ticket by Priority*@
    <script>

        var ticketByPriorityData = [{
            label: "Low",
            value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Low)).Count()
        }, {
            label: "Medium",
            value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Medium)).Count()
        }, {
            label: "High",
            value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.High)).Count()
        }, {
            label: "Urgent",
            value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Urgent)).Count()
        }];


        /*
        Morris: Donut
        */
        if ($('#morrisTicketPriority').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisTicketPriority',
                data: ticketByPriorityData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });
        };
    </script>
	@*Ticket by Status*@
    <script>

        var ticketByStatusData = [{
            label: "Resolved",
            value: @Model.Tickets.Where(t=>t.TicketStatus.Name == nameof(BTTicketStatus.Resolved)).Count()
        }, {
            label: "Testing",
            value: @Model.Tickets.Where(t=>t.TicketStatus.Name == nameof(BTTicketStatus.Testing)).Count()
        }, {
            label: "Development",
            value: @Model.Tickets.Where(t=>t.TicketStatus.Name == nameof(BTTicketStatus.Development)).Count()
        }, {
            label: "New",
            value: @Model.Tickets.Where(t=>t.TicketStatus.Name == nameof(BTTicketStatus.New)).Count()
        }];


        /*
        Morris: Donut
        */
        if ($('#morrisTicketStatus').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisTicketStatus',
                data: ticketByStatusData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });
        };
    </script>

    <!--  Plotly Charts  -->
    <!-- Load plotly.js into the DOM -->
    <script src="https://cdn.plot.ly/plotly-2.12.1.min.js"></script>
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/PlotlyBarChart",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                
                var data = result;

                var layout = {showlegend: false,
                    paper_bgcolor:'rgba(0,0,0,0)',
                    plot_bgcolor:'rgba(0,0,0,0)'};

                var config = {responsive: true};

                Plotly.newPlot('plotlyChart', data, layout, config);
                },
                failure: function (result) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
    </script>




          <!--NEW-DONUT Chart Morris plugin files -->
        <script src="./vendor/raphael/raphael.min.js"></script>
        <script src="./vendor/morris/morris.min.js"></script>
        <script src="./js/plugins-init/morris-init.js"></script>

}

              